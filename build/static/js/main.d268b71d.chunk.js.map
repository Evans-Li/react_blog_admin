{"version":3,"sources":["config/apiUrl.js","config/request.js","Login/index.js","components/Transition/index.js","pages/AddArticle/index.js","components/ArticleListAll/index.js","components/TopArticleList/index.js","config/utils.js","pages/ArticleList/index.js","pages/Comment/index.js","pages/EchartsTest/data.js","pages/EchartsTest/index.js","components/ToolBarArt/index.js","AdminIndex/index.js","Main.js","index.js"],"names":["apiUrl","servicePath","checkLogin","getTypeInfo","addArticle","updateArticle","getArticleList","delArticle","getArticleById","getArticleComment","upPassComment","signOut","requestGet","url","axios","method","withCredentials","requestPost","data","header","Login","props","useState","userName","setUserName","password","setPassworld","isLoading","setIsLoading","className","tip","spinning","size","title","bordered","style","width","id","placeholder","prefix","HomeOutlined","onChange","e","target","value","Password","type","block","onClick","then","res","history","push","message","success","error","setTimeout","Transition","timeout","classNames","appear","unmountOnExit","item","CSSTransition","in","Option","Select","TextArea","Input","AddArticle","setTypeId","articleId","setArticleId","articleTitle","setArticleTitle","articleContent","setArticleContent","markdownContent","setMarkdownContent","introducemd","setIntroducemd","introducehtml","setIntroducehtml","showDate","setShowDate","typeInfo","setTypeInfo","selectedType","setSelectType","viewCount","setViewCount","isTop","setIsTop","dateValue","isTopRef","useRef","categoryRef","renderer","marked","Renderer","setOptions","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","changeArticleContent","articleHtml","changeIntroducemd","changeIsTop","selectTypeHandler","console","log","saveArticle","isNaN","dataProps","type_id","article_content","introduce","is_top","view_count","datetext","replace","addTime","Date","getTime","insertId","isSuccess","catch","useEffect","localStorage","removeItem","match","params","article","contentHtml","introHtml","typeId","gutter","span","textAlign","ref","map","key","Id","typeName","rows","onPressEnter","dangerouslySetInnerHTML","__html","showToday","dataString","changeShowDate","ArticleListAll","list","toUpdataArticle","searchText","setSearchText","searchedColumn","setSearchedColumn","searchRef","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","handleSearch","marginBottom","display","icon","SearchOutlined","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","upArticle","delArt","artCommMange","renderList","TableCols","fixed","columns","dataSource","colList","test","React","memo","topList","renderItem","Item","part_count","urlList","menuList","AppstoreOutlined","childrens","CheckSquareOutlined","TabPane","Tabs","Modal","ArticleList","setList","setTopList","result","filter","content","cancelText","onOk","onCancel","animated","defaultActiveKey","tab","forceRender","Comment","isLoaidng","fetchData","aligh","align","defaultSortOrder","sorter","a","b","add_time","filters","filterMultiple","is_pass","sortDirections","is_reply","passComment","delComment","deteilsComm","ExclamationCircleOutlined","okText","msg","pagination","extra","loading","barOption","tooltip","trigger","axisPointer","legend","top","right","textStyle","itemWidth","itemHeight","itemGap","grid","left","bottom","containLabel","xAxis","axisLine","show","lineStyle","axisTick","axisLabel","yAxis","splitLine","fontSize","series","name","barWidth","itemStyle","Echart","option","height","paddingRight","signOutStyle","ToolBarArt","openId","FormOutlined","LogoutOutlined","date","Header","Layout","Content","Footer","Sider","SubMenu","Menu","AdminIndex","collapsed","setCollapsed","handleClickArticle","minHeight","onCollapse","theme","mode","renderMenuList","dataList","i","index","background","margin","path","exact","component","Main","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d268b71d.chunk.js","sourcesContent":["// const apiUrl = 'http://localhost:7001/admin/'\nconst apiUrl = 'http://jsv5.tk:7001/admin/'\n\nexport const servicePath = {\n  checkLogin: apiUrl+'checkLogin', //  登录接口\n  getTypeInfo: apiUrl+'getTypeInfo', //  获取文章分类\n  addArticle: apiUrl+'addArticle' , //  添加文章\n  updateArticle: apiUrl+'updateArticle',  //  更新文章\n  getArticleList: apiUrl+'getArticleList' , //  获取文章列表\n  delArticle: apiUrl+'delArticle/'  ,// 删除文章\n  getArticleById: apiUrl+'getArticleById/',//修改文章\n  getArticleComment: apiUrl+'getArticleComment', //获取全部\n  upPassComment: apiUrl+'upPassComment', //审核留言\n  signOut: apiUrl+'signOut'\n} ","import axios from 'axios'\n\nexport const requestGet = (url)=>{\n  return axios({\n    method: 'get',\n    url,\n    withCredentials: true,\n    // header: { 'Access-Control-Allow-Origin': '*' },\n  })\n}\nexport const requestPost = (url,data)=>{\n  return axios({\n    method: 'post',\n    url,\n    data,\n    withCredentials: true,\n    header: { 'Access-Control-Allow-Origin': '*' },\n  })\n}","import React, { useState } from 'react';\nimport { Card, Input, Spin, Button, message } from 'antd'\nimport 'antd/dist/antd.css';\nimport { HomeOutlined } from '@ant-design/icons'\nimport './index.scss'\nimport { servicePath } from '../config/apiUrl'\nimport { requestPost, requestGet } from '../config/request';\nimport cookie from 'react-cookies'\n\n\nfunction Login(props) {\n  const [userName, setUserName] = useState('')\n  const [password, setPassworld] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  const checkLogin = () => {\n    setIsLoading(true)\n    if (!userName) {\n      message.error('用户名不能为空!')\n      setTimeout(() => {\n        setIsLoading(false)\n      }, 500);\n      return false\n    } else if (!password) {\n      message.error('密码不能为空!')\n      setTimeout(() => {\n        setIsLoading(false)\n      }, 500);\n      return false\n    }\n    let data = {\n      \"userName\": userName,\n      \"password\": password\n    }\n    requestPost(servicePath.checkLogin, data)\n      .then((res) => {\n        if (res.data.data === '登录成功') {\n          setIsLoading(false)\n          \n          // localStorage.setItem(\"openId\", res.data.openId)\n          // cookie.save('openId', res.data.openId,{SameSite:'none'})\n          props.history.push('/index')\n          message.success('登录成功!')\n        } else if (res.data.data === '登录失败') {\n          message.error('用户名或密码错误!')\n          setTimeout(() => {\n            setIsLoading(false)\n          }, 1000);\n        }\n      })\n    setTimeout(() => {\n      setIsLoading(false)\n    }, 1000);\n  }\n  return (\n    <>\n      <div className='wrap'>\n        <div className='login-div'>\n          <Spin tip='请稍后...' spinning={isLoading} size='large'>\n            <Card title='Blog System' bordered={true} style={{ width: 400 }}>\n              <Input\n                id=\"userName\"\n                size=\"large\"\n                placeholder=\"Enter your userName\"\n                prefix={<HomeOutlined />}\n                onChange={(e) => { setUserName(e.target.value) }}\n              /><br></br>\n              <Input.Password\n                id=\"password\"\n                size=\"large\"\n                placeholder=\"Enter your Passworld\"\n                prefix={<HomeOutlined />}\n                onChange={(e) => { setPassworld(e.target.value) }}\n              /><br></br>\n              <Button type='primary' size='large' block onClick={checkLogin} >登录</Button>\n            </Card>\n          </Spin>\n        </div>\n\n      </div>\n\n    </>\n  )\n\n}\n\nexport default Login","import React from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport './index.scss'\n\nconst Transition = ({ timeout, classNames, appear,unmountOnExit, item}) => {\n  return(\n    <CSSTransition\n      in={true}\n      timeout={timeout}\n      classNames={classNames}\n      appear={appear}\n      unmountOnExit={unmountOnExit}\n    >\n    {item}\n    </CSSTransition>\n  )\n}\n\nexport default Transition","import React, { useState, useEffect, useRef } from 'react';\nimport marked from 'marked'\nimport './index.scss'\nimport { Row, Col, Input, Select, Button, DatePicker, message, Spin } from 'antd'\nimport { servicePath } from '../../config/apiUrl'\nimport { requestGet, requestPost } from '../../config/request'\nimport '../../comm.scss'\nimport Transition from '../../components/Transition'\n\nconst { Option } = Select;\nconst { TextArea } = Input\n\n\n\nfunction AddArticle(props) {\n  const [typeId, setTypeId] = useState(2) //文章类型id\n  const [articleId, setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\n  const [articleTitle, setArticleTitle] = useState('')   //文章标题\n  const [articleContent, setArticleContent] = useState('')  //markdown的编辑内容\n  const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\n  const [introducemd, setIntroducemd] = useState()            //简介的markdown内容\n  const [introducehtml, setIntroducehtml] = useState('等待编辑') //简介的html内容\n  const [showDate, setShowDate] = useState()   //发布日期\n  const [updateDate, setUpdateDate] = useState() //修改日志的日期\n  const [typeInfo, setTypeInfo] = useState([]) // 文章类别信息\n  const [selectedType, setSelectType] = useState() //选择的文章类别\n  const [viewCount, setViewCount] = useState(0)\n  const [isTop, setIsTop] = useState(0)\n  const [isLoading, setIsLoading] = useState(false) //  发布文章loading\n\n  const [dateValue, setDateValue] = useState()\n  const isTopRef = useRef(null)\n  const categoryRef = useRef(null)\n\n\n  const renderer = new marked.Renderer();\n  marked.setOptions({ // marked配置\n    renderer: renderer,\n    gfm: true,\n    pedantic: false,\n    sanitize: false,\n    tables: true,\n    breaks: false,\n    smartLists: true,\n    smartypants: false,\n  });\n\n  const changeArticleContent = (e) => { //文章预览\n    setArticleContent(e.target.value)\n    let articleHtml = marked(e.target.value)\n    setMarkdownContent(articleHtml)\n  }\n\n  const changeIntroducemd = (e) => {  //简介预览\n    setIntroducemd(e.target.value)\n    let introducehtml = marked(e.target.value)\n    setIntroducehtml(introducehtml)\n  }\n\n  const changeIsTop = isTop => {  // 是否置顶\n    setIsTop(isTop)\n  }\n\n  const getTypeInfo = () => {  // 获取文章分类\n    requestGet(servicePath.getTypeInfo)\n      .then((res) => {\n        setTypeInfo(res.data.data)\n        // res.data.data == \"未登录\" ? (localStorage.removeItem(\"openId\"), props.history.push('/')) : setTypeInfo(res.data.data);\n        if (res.data.data == \"未登录\") {\n          localStorage.removeItem('openId')\n          props.history.push('/')\n        } else {\n          setTypeInfo(res.data.data)\n        }\n      }).catch(() => {\n        console.log('getTypeInfo 请求失败!')\n      })\n  }\n\n  const selectTypeHandler = (value) => {  //文章类别\n    console.log(value)\n    setSelectType(value)\n  }\n  const changeShowDate = (data) => {  //发布时间\n    setShowDate(data)\n  }\n  const changeArticleTitle = (title) => { //文章标题\n    setArticleTitle(title)\n  }\n\n  const saveArticle = () => {\n    if (isNaN(selectedType)) {\n      message.error('必须选择文章类别')\n      return false\n    } else if (!articleTitle) {\n      message.error('文章名称不能为空')\n      return false\n    } else if (!articleContent) {\n      message.error('文章内容不能为空')\n      return false\n    } else if (!introducemd) {\n      message.error('简介不能为空')\n      return false\n    } else if (!showDate) {\n      message.error('发布日期不能为空')\n      return false\n    }\n\n    setIsLoading(true)\n    let dataProps = {}\n    dataProps.type_id = selectedType\n    dataProps.title = articleTitle\n    dataProps.article_content = articleContent\n    dataProps.introduce = introducemd\n    dataProps.is_top = isTop\n    dataProps.view_count = viewCount\n    let datetext = showDate.replace('-', '/') //把字符串转换成时间戳\n    dataProps.addTime = (new Date(datetext).getTime()) / 1000\n\n    if (articleId === 0) {\n      // dataProps.view_count = Math.ceil(Math.random() * 100) + 0\n      dataProps.view_count = 0\n      requestPost(servicePath.addArticle, dataProps)\n        .then((res) => {\n          setArticleId(res.data.insertId)\n          res.data.isSuccess ? message.success('添加成功!') : message.success('添加失败!');\n          setIsLoading(false)\n        }).catch(() => {\n          setIsLoading(false)\n        })\n    } else {\n      dataProps.id = articleId\n      requestPost(servicePath.updateArticle, dataProps)\n        .then((res) => {\n          res.data.isSuccess ? message.success('文章修改成功! ') : message.success('文章修改失败!')\n          setIsLoading(false)\n        }).catch(() => {\n          setIsLoading(false)\n        })\n    }\n\n  }\n\n  const getArticleById = id => {\n    requestGet(servicePath.getArticleById + id)\n      .then(res => {\n        let article = res.data.data[0]\n        setArticleTitle(article.title)\n        setArticleContent(article.article_content)\n        let contentHtml = marked(article.article_content)\n        setMarkdownContent(contentHtml)\n        setIntroducemd(article.introduce)\n        let introHtml = marked(article.introduce)\n        setIntroducehtml(introHtml)\n        setShowDate(article.addTime)\n        setIntroducemd(article.introduce)\n        // setSelectType(article.typeName)\n        setTypeId(article.typeId)\n        setViewCount(article.view_count)\n      })\n  }\n\n  const renderPage = () => (\n    <div>\n      <Spin spinning={isLoading}>\n\n        <Row gutter={5}>\n          <Col span={18}>\n            <Row >\n              <Col span={20}>\n                <Input size=\"middle\" placeholder=\"请输入博客标题\" onChange={(e) => { changeArticleTitle(e.target.value) }} value={articleTitle} />\n              </Col>\n              <Col span={4}>\n                <div style={{ textAlign:'right'}} ref={categoryRef}>\n                  <Select placeholder='请选择类别' value={selectedType} onChange={selectTypeHandler} size=\"middle\">\n                    {\n                      typeInfo.map((item, key) => {\n                        return (\n                          <Option value={item.Id} key={key}>{item.typeName}</Option>\n                        )\n                      })\n                    }\n                  </Select>\n                </div>\n\n              </Col>\n            </Row>\n            <br />\n            <Row gutter={8}>\n              <Col span={12}>\n                <TextArea\n                  className=\"markdown-content\"\n                  rows={35}\n                  onChange={changeArticleContent}\n                  onPressEnter={changeArticleContent}\n                  placeholder=\"文章内容\"\n                  value={articleContent}\n                >\n                </TextArea>\n              </Col>\n              <Col span={12}>\n                <div className=\"show-html\"\n                  dangerouslySetInnerHTML={{ __html: markdownContent }}\n                >\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            <Row>\n              <Col style={{width: '100%'}} span={12}>\n                <Button  style={{width: '100%'}} type=\"default\" >暂存文章</Button>\n              </Col>\n              <Col span={12}>\n                <Button   style={{width: '100%'}}  type=\"primary\" onClick={saveArticle}>发布文章</Button>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <br />\n              <Col span={24}>\n                <TextArea\n                  placeholder=\"文章简介\"\n                  rows={4}\n                  onChange={changeIntroducemd}\n                  onPressEnter={changeIntroducemd}\n                  value={introducemd}\n                >\n                </TextArea>\n                <br /><br />\n                <div className=\"introduce-html\"\n                  dangerouslySetInnerHTML={{ __html: introducehtml }}\n                ></div>\n              </Col>\n\n            </Row>\n            <Row>\n              <Col span={12}>\n                <div className=\"date-select\">\n                  <DatePicker\n                    key={dateValue}\n                    showToday\n                    onChange={(data, dataString) => { changeShowDate(dataString) }}\n                    placeholder='发布日期'\n                    size=\"middle\"\n                    className='fullW'\n                  />\n                </div>\n              </Col>\n              <Col span={12} >\n                <div ref={isTopRef}>\n                  <Select placeholder='是否置顶' value={isTop} onChange={changeIsTop} className='fullW'>\n                    <Option value={0}>不置顶</Option>\n                    <Option value={1}>置顶</Option>\n                  </Select>\n                </div>\n              </Col>\n              <Row>\n                <Col span={10}>\n\n                </Col>\n                <Col span={14}></Col>\n              </Row>\n            </Row>\n          </Col>\n        </Row>\n      </Spin>\n    </div>\n\n  )\n  useEffect(() => {\n    getTypeInfo();\n    let id = props.match.params.id\n    if (id) {\n      setArticleId(id)\n      getArticleById(id)\n    }\n  }, [])\n\n\n  return (\n    <div>\n      <Transition\n        in={true}\n        timeout={1500}\n        classNames={\"fly\"}\n        appear={true}\n        unmountOnExit={true}\n        item={renderPage}\n      />\n    </div>\n  )\n}\nexport default AddArticle","import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Input, Table,Pagination, Spin } from 'antd'\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport './index.scss'\nimport Transition from '../../components/Transition'\n\nconst ArticleListAll = ({ list, toUpdataArticle, delArticle }) => {\n\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  let searchRef = useRef(null)\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            searchRef = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          icon={<SearchOutlined />}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchRef.select());\n      }\n    },\n    render: text => searchedColumn === dataIndex ? (\n      <Highlighter\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n        searchWords={[searchText]}\n        autoEscape\n        textToHighlight={text.toString()}\n      />\n    ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('')\n  };\n\n  \n  //  修改文章\n  function upArticle(e) {\n    toUpdataArticle(e.target.value)\n  }\n  //  删除文章\n  const delArt = e =>{\n    delArticle(e.target.value)\n  }\n\n  //  留言管理\n  const artCommMange = (e) =>{\n  }\n\n\n  const renderList = () => {\n    const TableCols = [\n      {\n        title: '文章标题',\n        dataIndex: 'title',\n        key: 'title',\n        fixed: 'left',\n        ...getColumnSearchProps('title'),\n      },\n      {\n        title: '文章类别',\n        dataIndex: 'typeName',\n        key: 'typeName',\n        ...getColumnSearchProps('typeName'),\n      },\n      {\n        title: '发布时间',\n        dataIndex: 'addTime',\n        key: 'addTime',\n        ...getColumnSearchProps('addTime'),\n      },\n      {\n        title: '浏览量',\n        dataIndex: 'view_count',\n        key: 'view_count',\n        ...getColumnSearchProps('view_count'),\n      },\n      {\n        title: '操作',\n        dataIndex: 'handle',\n        key: 'handle',\n        render: (text, record) => {\n          return (\n            <div className='action-btn-div'>\n              <button value={record.id} type='button' onClick={upArticle}>修改</button>\n              <button value={record.id} type='button' onClick={delArt}>删除</button>\n              <button value={record.id} type='button' onClick={artCommMange}>留言管理</button>\n            </div>\n          )\n        }\n      },\n    ]\n    return (\n      <div>\n        <Table columns={TableCols} dataSource={list} size='middle'  bordered />\n      </div>\n    )\n  }\n\n  const renderTable = () =>(\n    renderList()\n  )\n\n\n  return (\n    <div>\n      {/* <Transition\n        in={true}\n        timeout={1500}\n        classNames={\"fly\"}\n        appear={true}\n        unmountOnExit={true}\n        item={renderTable}\n      /> */}\n      {renderList()}\n    </div>\n  )\n}\n\nexport default ArticleListAll","import React from 'react';\nimport { List, Row, Col, Button } from 'antd'\n\nconst colList = [\n  {\n    span: 4,\n    test: '标题',\n  },\n  {\n    span: 4,\n    test: '类别'\n  }, {\n    span: 4,\n    test: '发布时间'\n  }, {\n    span: 4,\n    test: '集数'\n  }, {\n    span: 4,\n    test: '浏览量'\n  }, {\n    span: 4,\n    test: '操作'\n  },\n]\n\nconst TopArticleList = ({topList,toUpdataArticle,delArticle}) => {\n  const list = topList[0]\n  return (\n    <div>\n      <List\n        header={\n          <Row className=\"list-div\">\n            {\n              colList.map((item, key) => (\n                <Col key={key} span={item.span}>{item.test}</Col>\n              ))\n            }\n          </Row>\n        }\n        bordered\n        dataSource={list}\n        renderItem={item => (\n          <List.Item>\n            <Row className=\"list-div\" style={{width: '100%'}}>\n              <Col span={4}>\n                {item.title}\n              </Col>\n              <Col span={4}>\n                {item.typeName}\n              </Col>\n              <Col span={4}>\n                {item.addTime}\n              </Col>\n              <Col span={4}>\n                共<span>{item.part_count}</span>集\n              </Col>\n              <Col span={4}>\n                {item.view_count}\n              </Col>\n              <Col span={4}>\n                <Button type=\"primary\" onClick={() => toUpdataArticle(item.id)}>修改</Button>&nbsp;\n                <Button onClick={() => delArticle(item.id)} >删除 </Button>\n              </Col>\n            </Row>\n\n          </List.Item>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default React.memo(TopArticleList) ","import React from 'react';\nimport {\n  AppstoreOutlined,\n  CheckSquareOutlined\n} from '@ant-design/icons'\n\n//  定义url\nexport const urlList = {\n  addArticle: '/index/add/',\n  articleList: '/index/list/',\n  echarts: '/index/echarts/',\n  comment: '/index/comment/'\n}\n\n// 系统左侧菜单\nexport const menuList = [\n  {\n    title: '文章管理',\n    key: '文章管理',\n    icon: <AppstoreOutlined />,\n    childrens: [\n      {\n        key: urlList.addArticle,\n        title: '添加文章',\n        icon: <AppstoreOutlined />\n      },\n      {\n        key: urlList.articleList,\n        title: '文章列表',\n        icon: <CheckSquareOutlined />\n      }\n    ]\n  },\n  {\n    title: '留言管理',\n    key: urlList.comment,\n    icon: <AppstoreOutlined />,\n  },\n]\n\n\n","import React, { useState, useEffect } from 'react';\nimport { List, Row, Col, Modal, message, Button } from 'antd'\nimport ArticleListAll from '../../components/ArticleListAll'\nimport TopArticleList from '../../components/TopArticleList'\nimport './index.scss'\nimport '../../comm.scss'\nimport { requestPost, requestGet } from '../../config/request'\nimport { Tabs } from 'antd';\nimport { servicePath } from '../../config/apiUrl'\nimport Transition from '../../components/Transition'\nimport { urlList } from '../../config/utils'\nconst { TabPane } = Tabs;\nconst { confirm } = Modal\n\n\nfunction ArticleList(props) {\n  const [list, setList] = useState([])\n  const [topList, setTopList] = useState([])\n\n  const getArticleList = () => {\n    requestGet(servicePath.getArticleList)\n      .then(res => {\n        let result = res.data.list\n        let topList = [];\n        topList.push(result.filter((item) => item.is_top))\n        setTopList(topList)\n        setList(result)\n      })\n  }\n  const delArticle = (id) => {  //删除文章\n    confirm({\n      title: '确定删除文章吗?',\n      content: '删除后无法恢复!!!',\n      cancelText: '点错了!不删除!',\n      onOk() {\n        requestGet(servicePath.delArticle + id)\n          .then(res => {\n            console.log(res);\n            message.success('文章删除成功!')\n            getArticleList()\n          })\n      },\n      onCancel() {\n        message.success('取消操作')\n      }\n    })\n  }\n\n  const toUpdataArticle = (id) => { // 跳转修改文章页面\n    props.history.push(urlList.addArticle + id)\n  }\n\n  // 渲染页面\n  const renderPage = () => (\n    <Tabs animated defaultActiveKey='1'>\n      <TabPane tab='所有文章' key={1} forceRender={false}>\n        <ArticleListAll\n          list={list}\n          delArticle={delArticle}\n          toUpdataArticle={toUpdataArticle}\n        />\n      </TabPane>\n      <TabPane tab='置顶文章' key={2} forceRender={false}>\n        <TopArticleList\n          topList={topList}\n          toUpdataArticle={toUpdataArticle}\n          delArticle={delArticle} />\n      </TabPane>\n    </Tabs>\n  )\n\n  useEffect(() => {\n    getArticleList()\n  }, [])\n  return (\n    <div>\n      <Transition\n        in={true}\n        timeout={1500}\n        classNames={\"fly\"}\n        appear={true}\n        unmountOnExit={true}\n        item={renderPage}\n      />\n    </div>\n  )\n\n}\n\nexport default ArticleList","import React, { useState, useEffect } from 'react';\nimport { Table, Spin, message, Modal } from 'antd'\nimport { requestGet, requestPost } from '../../config/request'\nimport { servicePath } from '../../config/apiUrl'\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\nimport './index.scss'\nimport Transition from '../../components/Transition'\n\nconst { confirm } = Modal;\n\nconst Comment = () => {\n  const [list, setList] = useState([])\n  const [isLoaidng, setIsLoading] = useState(true)\n\n\n  const fetchData = () => {\n    requestGet(servicePath.getArticleComment).then(res => {\n      setList(res.data.list)\n      setIsLoading(false)\n    })\n  }\n\n  // 表格column\n  const columns = [\n    {\n      title: '昵称',\n      dataIndex: 'com_name',\n      key: 'com_name',\n      width: 130\n    },\n    {\n      key: 'email',\n      title: '邮箱',\n      dataIndex: 'email',\n      aligh: 'center',\n      width: 210\n    },\n    {\n      key: 'date',\n      title: '时间',\n      dataIndex: 'add_time',\n      align: 'center',\n      width: 130,\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => {\n        let AdateStr = a.add_time.replace(/-/g, \"\")\n        let BdateStr = b.add_time.replace(/-/g, \"\")\n        return AdateStr - BdateStr\n      },\n    },\n    {\n      key: 'comment',\n      title: '留言内容',\n      dataIndex: 'comment',\n    },\n    {\n      key: 'is_pass',\n      title: '留言状态',\n      dataIndex: 'is_pass',\n      width: 100,\n      filters: [\n        {\n          text: '未审核',\n          value: '0',\n        },\n        {\n          text: '已审核',\n          value: '1',\n        },\n      ],\n      filterMultiple: false,\n      onFilter: (value, record) => record.is_pass == value,\n      sortDirections: ['descend', 'ascend'],\n      render: function (text, record) {\n        let config = {\n          '0': '未审核',\n          '1': '已通过',\n        }\n        return config[text]\n      }\n    },\n    {\n      key: 'action',\n      title: '操作',\n      dataIndex: 'action',\n      width: 140,\n      render: function (text, record) {\n        return (\n          <div className='comment-action-div'>\n            {\n              // 非回复类型  和未通过的留言显示通过按钮\n              record.is_pass == 0 && record.is_reply == 0 ?\n                <a className='pass' target={record.id} onClick={passComment}>通过</a>\n                :\n                null\n            }\n            <a className='del' target={record.id} onClick={delComment}>删除</a>\n            <a className='details' target={record.id} onClick={deteilsComm}>详情</a>\n          </div>\n\n        )\n      }\n    }\n  ];\n\n  //  删除留言\n  const delComment = (e) => {\n    let data = {\n      id: e.target.target,\n      type: 'delete',\n    }\n    confirm({\n      title: '确定删除这条留言吗?',\n      icon: <ExclamationCircleOutlined />,\n      content: '操作不可撤回, 请君斟酌再三!',\n      okText: '删除',\n      onOk() {\n        console.log('OK');\n        requestPost(servicePath.upPassComment, data).then(res => {\n          console.log(res)\n          if (res.data.isSuccess) {\n            message.success(res.data.msg)\n            fetchData()\n          } else {\n            message.error('删除失败')\n          }\n        }).catch((e) => {\n          message.error('删除失败, 请重试!')\n          console.log('删除失败', e)\n        })\n      },\n      onCancel() {\n\n      },\n    });\n\n  }\n\n  const deteilsComm = () => {\n\n  }\n  //  审核通过\n  const passComment = (e) => {\n    let data = {\n      id: e.target.target,\n      type: 'pass',\n    }\n    confirm({\n      title: '通过这条留言吗?',\n      icon: <ExclamationCircleOutlined />,\n      content: '操作不可撤回, 请君斟酌再三!',\n      okText: '通过',\n      onOk() {\n        console.log('OK');\n        requestPost(servicePath.upPassComment, data).then(res => {\n          console.log(res)\n          if (res.data.isSuccess) {\n            message.success(res.data.msg)\n            fetchData()\n          } else {\n            message.error('操作失败')\n          }\n        }).catch((e) => {\n          message.error('操作失败, 请重试!')\n          console.log('操作失败', e)\n        })\n      },\n      onCancel() {\n\n      },\n    });\n\n  }\n\n  function onChange(pagination, filters, sorter, extra) {\n    // console.log('params', pagination, filters, sorter, extra);\n  }\n\n\n  const rederTable = () => (\n    <div>\n      <Table\n        key='table'\n        columns={columns}\n        dataSource={list}\n        onChange={onChange}\n        size='small'\n        loading={isLoaidng}\n        bordered\n      />\n    </div>\n  )\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  return (\n    <div>\n      <Transition\n        in={true}\n        timeout={1500}\n        classNames={\"fly\"}\n        appear={true}\n        unmountOnExit={true}\n        item={rederTable}\n      />\n    </div>\n  )\n}\n\nexport default Comment\n","export const barOption = {\n  backgroundColor: 'transparent',\n  tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n          type: 'shadow'\n      }\n  },\n  legend: {\n      data: ['门禁进入', '门禁外出'],\n      align: 'left',\n      top: 18,\n      right: 20,\n      textStyle: {\n          color: \"#c1c5cd\"\n      },\n      itemWidth: 10,\n      itemHeight: 10,\n      itemGap: 12\n  },\n  grid: {\n      top: '24%',\n      left: '3%',\n      right: '3%',\n      bottom: '3%',\n      containLabel: true\n  },\n  xAxis: [{\n      type: 'category',\n      data: [\n          '1号楼',\n          '2号楼',\n          '3号楼',\n          '4号楼',\n          '5号楼',\n          '6号楼',\n          '7号楼',\n          '8号楼',\n      ],\n      axisLine: {\n          show: true,\n          lineStyle: {\n              color: \"#45647f\",\n              width: 1,\n              type: \"solid\"\n          }\n      },\n      axisTick: {\n          show: false,\n      },\n      axisLabel: {\n          show: true,\n          textStyle: {\n              color: \"#a1d8f1\",\n          }\n      },\n  }],\n  yAxis: [{\n      type: 'value',\n      axisTick: {\n          show: false,\n      },\n      axisLine: {\n          show: true,\n          lineStyle: {\n              color: \"#45647f\",\n              width: 1,\n              type: \"solid\"\n          },\n      },\n      splitLine: {\n          show: false\n      },\n      axisLabel: {\n          show: true,\n          textStyle: {\n              color: '#a1d8f1',\n              fontSize: '12px'\n          }\n      }\n\n  }],\n  series: [{\n      name: '门禁进入',\n      type: 'bar',\n      data: [20, 50, 80, 58, 83, 68, 57, 100],\n      barWidth: 8, //柱子宽度\n      // barGap: 1, //柱子之间间距\n      itemStyle: {\n          color: '#14e3cc'\n      }\n  }, {\n      name: '门禁外出',\n      type: 'bar',\n      data: [50, 70, 60, 61, 75, 87, 60, 62],\n      barWidth: 8,\n      // barGap: 1,\n      itemStyle: {\n          color: '#f84f55'\n      }\n  }]\n}\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react'\nimport { barOption } from './data'\nimport './style.scss'\nfunction Echart(){\n\n  return (\n    <div>\n      <div className='echartsBox'>\n      <ReactEcharts \n        option={barOption}\n        style={{width:'100%',height:'500px'}}\n       />\n       </div>\n      <div id='main'>echarts</div>\n    </div>\n  )\n  \n}\n\nexport default Echart","\nimport React, { useEffect } from 'react';\nimport { Button, Tooltip, Modal, message } from 'antd'\nimport { FormOutlined, LogoutOutlined } from '@ant-design/icons'\nimport './index.scss'\nimport { servicePath } from '../../config/apiUrl'\nimport { requestPost } from '../../config/request'\n\nconst { confirm } = Modal\n\nconst style = {\n  textAlign: 'right',\n  paddingRight: '40px'\n}\nconst signOutStyle = {\n  color: '#ccc',\n  fontSize: '20px'\n}\n\nconst ToolBarArt = ({ props }) => {\n\n  // 退出系统\n  const handelSignOut = () => {\n    confirm({\n      title: '退出系统?',\n      onOk() {\n        requestPost(servicePath.signOut, {\n          date: new Date().getTime()\n        }).then(res => {\n          if (res.data.isSuccess == true) {\n            props.history.push('/')\n            message.success('成功退出')\n          } else{\n            message.error('退出失败,请重试')\n            return\n          }\n        })\n      },\n      onCancel() {\n\n      }\n    })\n  }\n  // 写文章\n  const handelCreateArt = () => {\n    props.history.push('/index/add/')\n  }\n\n  useEffect(() => {\n    if (localStorage.openId) {\n      console.log('you')\n    } else {\n      console.log('meiyou')\n    }\n  }, [])\n  return (\n    <div style={style}>\n      <Button type='primary' onClick={handelCreateArt}><FormOutlined />写文章</Button>\n      <span className='sign-out'><Tooltip title=\"退出\"><LogoutOutlined style={signOutStyle} onClick={handelSignOut} /></Tooltip></span>\n    </div>\n  )\n}\n\nexport default ToolBarArt","import React, { useState } from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Route } from 'react-router-dom'\nimport { TeamOutlined, FileOutlined, AppstoreOutlined } from '@ant-design/icons'\nimport AddArticle from '../pages/AddArticle/index.js'\nimport ArticleList from '../pages/ArticleList/index.js'\nimport Comment from '../pages/Comment'\nimport Echart from '../pages/EchartsTest'\nimport ToolBarArt from '../components/ToolBarArt/index.js'\nimport { urlList, menuList } from '../config/utils'\nimport './index.scss'\nimport '../comm.scss'\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nfunction AdminIndex(props) {\n  const [collapsed, setCollapsed] = useState(false)\n  const onCollapse = (collapsed) => {\n    setCollapsed(collapsed)\n  }\n    //  点击菜单跳转页面\n  const handleClickArticle = (e) => {\n    props.history.push(e.key)\n  }\n  //  渲染MenuList\n  const renderMenuList = (dataList) => {\n    return (\n      dataList.map((i, index) => {\n        if (i.childrens) {\n          return (\n            <SubMenu\n              key={i.key}\n              onClick={handleClickArticle}\n              title={\n                <span>\n                  <span>{i.icon}{i.title}</span>\n                </span>\n              }\n            >\n              {renderMenuList(i.childrens)}\n            </SubMenu>\n          )\n        } else {\n          return (\n            <Menu.Item onClick={handleClickArticle} key={i.key}>{i.icon}{i.title}</Menu.Item>\n          )\n        }\n      })\n    )\n  }\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider  collapsed={collapsed} onCollapse={onCollapse}>\n        <div className=\"logo\"><h4 className=\"logo-title\">Blog System</h4></div>\n        <Menu theme='dark' mode=\"inline\">\n          {renderMenuList(menuList)}\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header style={{ background: '#fff', padding: \"0\", }}>\n          <ToolBarArt props={props} />\n        </Header>\n        <Content style={{ margin: '0 16px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>{}</Breadcrumb.Item>\n            <Breadcrumb.Item></Breadcrumb.Item>\n          </Breadcrumb>\n          <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n            <div>\n              <Route path=\"/index\" exact component={AddArticle} />\n              <Route path={urlList.addArticle} exact component={AddArticle} />\n              <Route path={`${urlList.addArticle}:id`} component={AddArticle} />\n              <Route path={urlList.articleList} component={ArticleList} />\n              <Route path={urlList.echarts} component={Echart} />\n              <Route path={urlList.comment} component={Comment} />\n            </div>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>深入技术, 看看世界</Footer>\n      </Layout>\n    </Layout >\n  );\n}\nexport default AdminIndex","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Login from './Login/index.js'\nimport AdminIndex from './AdminIndex/index.js'\n\nfunction Main() {\n  return (\n    <div>\n      <Router>\n        <Route path=\"/\"exact component={Login}></Route>\n        <Route path=\"/index/\" component={AdminIndex}></Route>\n      </Router>\n    </div>\n  )\n}\n\nexport default Main","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main'\n\nReactDOM.render(<Main/>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}